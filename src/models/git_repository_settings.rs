/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct GitRepositorySettings {
    #[serde(rename = "version")]
    pub version: String,
    #[serde(rename = "mirror", skip_serializing_if = "Option::is_none")]
    pub mirror: Option<Box<crate::models::GitRepositorySettingsJbsMirrorSettings>>,
    #[serde(rename = "encoding", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub encoding: Option<Option<String>>,
    #[serde(rename = "pushRestrictions", skip_serializing_if = "Option::is_none")]
    pub push_restrictions: Option<Box<crate::models::GitRepositorySettingsJbsPushRestrictions>>,
    #[serde(rename = "protectedBranches", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub protected_branches: Option<Option<Vec<crate::models::GitRepositorySettingsJbsProtectedBranch>>>,
    #[serde(rename = "preReceiveHook", skip_serializing_if = "Option::is_none")]
    pub pre_receive_hook: Option<Box<crate::models::GitRepositorySettingsJbsPreReceiveHook>>,
    #[serde(rename = "bundle", skip_serializing_if = "Option::is_none")]
    pub bundle: Option<Box<crate::models::GitRepositorySettingsJbsBundle>>,
    #[serde(rename = "subtree", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub subtree: Option<Option<Vec<crate::models::GitRepositorySettingsJbsSubtreeSetting>>>,
}

impl GitRepositorySettings {
    pub fn new(version: String) -> GitRepositorySettings {
        GitRepositorySettings {
            version,
            mirror: None,
            encoding: None,
            push_restrictions: None,
            protected_branches: None,
            pre_receive_hook: None,
            bundle: None,
            subtree: None,
        }
    }
}


