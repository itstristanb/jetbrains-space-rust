/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CustomFieldsTypeKeyFieldsPostRequest {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "description", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub description: Option<Option<String>>,
    #[serde(rename = "type")]
    pub r#type: Box<crate::models::CfType>,
    #[serde(rename = "constraint", skip_serializing_if = "Option::is_none")]
    pub constraint: Option<Box<crate::models::CfConstraint>>,
    #[serde(rename = "required")]
    pub required: bool,
    #[serde(rename = "private")]
    pub private: bool,
    #[serde(rename = "access", skip_serializing_if = "Option::is_none")]
    pub access: Option<crate::models::AccessType>,
    #[serde(rename = "defaultValue")]
    pub default_value: Box<crate::models::CfInputValue>,
    #[serde(rename = "openEnumValuesModification", skip_serializing_if = "Option::is_none")]
    pub open_enum_values_modification: Option<Box<crate::models::CfEnumValuesModification>>,
    #[serde(rename = "cfParameters", skip_serializing_if = "Option::is_none")]
    pub cf_parameters: Option<Box<crate::models::CfCreateParameters>>,
    #[serde(rename = "scope")]
    pub scope: Box<crate::models::ExtendedTypeScope>,
}

impl CustomFieldsTypeKeyFieldsPostRequest {
    pub fn new(name: String, r#type: crate::models::CfType, required: bool, private: bool, default_value: crate::models::CfInputValue, scope: crate::models::ExtendedTypeScope) -> CustomFieldsTypeKeyFieldsPostRequest {
        CustomFieldsTypeKeyFieldsPostRequest {
            name,
            description: None,
            r#type: Box::new(r#type),
            constraint: None,
            required,
            private,
            access: None,
            default_value: Box::new(default_value),
            open_enum_values_modification: None,
            cf_parameters: None,
            scope: Box::new(scope),
        }
    }
}


