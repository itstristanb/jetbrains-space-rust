/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct BlogCalendarEvent {
    #[serde(rename = "starts", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub starts: Option<Option<String>>,
    #[serde(rename = "ends", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub ends: Option<Option<String>>,
    #[serde(rename = "timezone", skip_serializing_if = "Option::is_none")]
    pub timezone: Option<Box<crate::models::ATimeZone>>,
    #[serde(rename = "rooms", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub rooms: Option<Option<Vec<String>>>,
    #[serde(rename = "allDay", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub all_day: Option<Option<bool>>,
}

impl BlogCalendarEvent {
    pub fn new() -> BlogCalendarEvent {
        BlogCalendarEvent {
            starts: None,
            ends: None,
            timezone: None,
            rooms: None,
            all_day: None,
        }
    }
}


