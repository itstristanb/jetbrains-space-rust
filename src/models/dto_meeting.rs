/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct DtoMeeting {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "archived")]
    pub archived: bool,
    #[serde(rename = "summary")]
    pub summary: String,
    #[serde(rename = "description", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub description: Option<Option<String>>,
    #[serde(rename = "locations")]
    pub locations: Vec<crate::models::TdLocation>,
    #[serde(rename = "profiles")]
    pub profiles: Vec<crate::models::TdMemberProfile>,
    #[serde(rename = "teams")]
    pub teams: Vec<crate::models::TdTeam>,
    #[serde(rename = "occurrenceRule")]
    pub occurrence_rule: Box<crate::models::CalendarEventSpec>,
    #[serde(rename = "origin")]
    pub origin: crate::models::MeetingOrigin,
    #[serde(rename = "conferenceLink", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub conference_link: Option<Option<String>>,
    #[serde(rename = "visibility")]
    pub visibility: crate::models::MeetingVisibility,
    #[serde(rename = "modificationPreference")]
    pub modification_preference: crate::models::MeetingModificationPreference,
    #[serde(rename = "joiningPreference", skip_serializing_if = "Option::is_none")]
    pub joining_preference: Option<crate::models::MeetingJoiningPreference>,
    #[serde(rename = "organizer", skip_serializing_if = "Option::is_none")]
    pub organizer: Option<Box<crate::models::MeetingOrganizer>>,
    #[serde(rename = "etag")]
    pub etag: i64,
    #[serde(rename = "privateDataSubstituted")]
    pub private_data_substituted: bool,
    #[serde(rename = "canModify")]
    pub can_modify: bool,
    #[serde(rename = "canDelete")]
    pub can_delete: bool,
    #[serde(rename = "canJoin")]
    pub can_join: bool,
    #[serde(rename = "externalParticipants")]
    pub external_participants: Vec<String>,
    #[serde(rename = "linkToExternalSource", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub link_to_external_source: Option<Option<String>>,
    #[serde(rename = "eventAttachments", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub event_attachments: Option<Option<Vec<crate::models::MeetingAttachment>>>,
    #[serde(rename = "conferenceData", skip_serializing_if = "Option::is_none")]
    pub conference_data: Option<Box<crate::models::EventConferenceData>>,
    #[serde(rename = "channelRef", skip_serializing_if = "Option::is_none")]
    pub channel_ref: Option<Box<crate::models::M2ChannelRecord>>,
    #[serde(rename = "externalSource", skip_serializing_if = "Option::is_none")]
    pub external_source: Option<Box<crate::models::EventExternalSource>>,
    #[serde(rename = "calendar", skip_serializing_if = "Option::is_none")]
    pub calendar: Option<Box<crate::models::CalendarInfo>>,
    #[serde(rename = "canLeaveOrRsvp", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub can_leave_or_rsvp: Option<Option<bool>>,
}

impl DtoMeeting {
    pub fn new(id: String, archived: bool, summary: String, locations: Vec<crate::models::TdLocation>, profiles: Vec<crate::models::TdMemberProfile>, teams: Vec<crate::models::TdTeam>, occurrence_rule: crate::models::CalendarEventSpec, origin: crate::models::MeetingOrigin, visibility: crate::models::MeetingVisibility, modification_preference: crate::models::MeetingModificationPreference, etag: i64, private_data_substituted: bool, can_modify: bool, can_delete: bool, can_join: bool, external_participants: Vec<String>) -> DtoMeeting {
        DtoMeeting {
            id,
            archived,
            summary,
            description: None,
            locations,
            profiles,
            teams,
            occurrence_rule: Box::new(occurrence_rule),
            origin,
            conference_link: None,
            visibility,
            modification_preference,
            joining_preference: None,
            organizer: None,
            etag,
            private_data_substituted,
            can_modify,
            can_delete,
            can_join,
            external_participants,
            link_to_external_source: None,
            event_attachments: None,
            conference_data: None,
            channel_ref: None,
            external_source: None,
            calendar: None,
            can_leave_or_rsvp: None,
        }
    }
}


