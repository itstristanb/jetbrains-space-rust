/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct BoardInfo {
    #[serde(rename = "owners")]
    pub owners: Box<crate::models::BoardOwners>,
    #[serde(rename = "columns")]
    pub columns: Box<crate::models::BoardColumns>,
    #[serde(rename = "description", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub description: Option<Option<String>>,
    #[serde(rename = "swimlaneKey", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub swimlane_key: Option<Option<String>>,
    #[serde(rename = "issueFields")]
    pub issue_fields: Vec<crate::models::BoardIssueField>,
    #[serde(rename = "backlog", skip_serializing_if = "Option::is_none")]
    pub backlog: Option<Box<crate::models::BoardBacklog>>,
}

impl BoardInfo {
    pub fn new(owners: crate::models::BoardOwners, columns: crate::models::BoardColumns, issue_fields: Vec<crate::models::BoardIssueField>) -> BoardInfo {
        BoardInfo {
            owners: Box::new(owners),
            columns: Box::new(columns),
            description: None,
            swimlane_key: None,
            issue_fields,
            backlog: None,
        }
    }
}


