/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct PlanItem {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "checklistId")]
    pub checklist_id: String,
    #[serde(rename = "tag", skip_serializing_if = "Option::is_none")]
    pub tag: Option<Box<crate::models::PlanningTag>>,
    #[serde(rename = "simpleText", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub simple_text: Option<Option<String>>,
    #[serde(rename = "simpleDone", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub simple_done: Option<Option<bool>>,
    #[serde(rename = "issue", skip_serializing_if = "Option::is_none")]
    pub issue: Option<Box<crate::models::Issue>>,
    #[serde(rename = "issueProblem", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub issue_problem: Option<Option<String>>,
    #[serde(rename = "canEditIssue", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub can_edit_issue: Option<Option<bool>>,
    #[serde(rename = "hasChildren")]
    pub has_children: bool,
    #[serde(rename = "archived")]
    pub archived: bool,
    #[serde(rename = "topics")]
    pub topics: Vec<crate::models::Topic>,
    #[serde(rename = "children")]
    pub children: Vec<crate::models::PlanItem>,
}

impl PlanItem {
    pub fn new(id: String, checklist_id: String, has_children: bool, archived: bool, topics: Vec<crate::models::Topic>, children: Vec<crate::models::PlanItem>) -> PlanItem {
        PlanItem {
            id,
            checklist_id,
            tag: None,
            simple_text: None,
            simple_done: None,
            issue: None,
            issue_problem: None,
            can_edit_issue: None,
            has_children,
            archived,
            topics,
            children,
        }
    }
}


