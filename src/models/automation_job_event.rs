/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct AutomationJobEvent {
    #[serde(rename = "meta")]
    pub meta: Box<crate::models::KMetaMod>,
    #[serde(rename = "executionId")]
    pub execution_id: String,
    #[serde(rename = "project")]
    pub project: Box<crate::models::PrProject>,
    #[serde(rename = "repositoryName")]
    pub repository_name: String,
    #[serde(rename = "jobName")]
    pub job_name: String,
    #[serde(rename = "executionNumber")]
    pub execution_number: i64,
    #[serde(rename = "trigger")]
    pub trigger: Box<crate::models::JobExecutionTrigger>,
    #[serde(rename = "triggerTime")]
    pub trigger_time: String,
    #[serde(rename = "status", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub status: Option<Option<Box<crate::models::AutomationJobEventStatus>>>,
    #[serde(rename = "failureReasons", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub failure_reasons: Option<Option<Box<crate::models::AutomationJobEventFailureReasons>>>,
    #[serde(rename = "stoppedBy", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub stopped_by: Option<Option<Box<crate::models::AutomationJobEventStoppedBy>>>,
    #[serde(rename = "startTime", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub start_time: Option<Option<Box<crate::models::AutomationJobEventStartTime>>>,
    #[serde(rename = "endTime", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub end_time: Option<Option<Box<crate::models::AutomationJobEventStartTime>>>,
    #[serde(rename = "repositories", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub repositories: Option<Option<Vec<crate::models::GitCheckout>>>,
}

impl AutomationJobEvent {
    pub fn new(meta: crate::models::KMetaMod, execution_id: String, project: crate::models::PrProject, repository_name: String, job_name: String, execution_number: i64, trigger: crate::models::JobExecutionTrigger, trigger_time: String) -> AutomationJobEvent {
        AutomationJobEvent {
            meta: Box::new(meta),
            execution_id,
            project: Box::new(project),
            repository_name,
            job_name,
            execution_number,
            trigger: Box::new(trigger),
            trigger_time,
            status: None,
            failure_reasons: None,
            stopped_by: None,
            start_time: None,
            end_time: None,
            repositories: None,
        }
    }
}


