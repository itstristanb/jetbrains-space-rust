/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct HaDto {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "fields")]
    pub fields: Vec<crate::models::HaDtoField>,
    #[serde(rename = "hierarchyRole")]
    pub hierarchy_role: crate::models::HierarchyRole,
    #[serde(rename = "hierarchyRole2")]
    pub hierarchy_role2: crate::models::HierarchyRole2,
    #[serde(rename = "extends", skip_serializing_if = "Option::is_none")]
    pub extends: Option<Box<crate::models::HaDto>>,
    #[serde(rename = "implements")]
    pub implements: Vec<crate::models::HaDto>,
    #[serde(rename = "inheritors")]
    pub inheritors: Vec<crate::models::HaDto>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<Box<crate::models::HaDescription>>,
    #[serde(rename = "deprecation", skip_serializing_if = "Option::is_none")]
    pub deprecation: Option<Box<crate::models::HaDeprecation>>,
    #[serde(rename = "experimental", skip_serializing_if = "Option::is_none")]
    pub experimental: Option<Box<crate::models::HaExperimental>>,
    #[serde(rename = "record")]
    pub record: bool,
    #[serde(rename = "featureFlag", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub feature_flag: Option<Option<String>>,
    #[serde(rename = "errorsField", skip_serializing_if = "Option::is_none")]
    pub errors_field: Option<Box<crate::models::HaField>>,
}

impl HaDto {
    pub fn new(id: String, name: String, fields: Vec<crate::models::HaDtoField>, hierarchy_role: crate::models::HierarchyRole, hierarchy_role2: crate::models::HierarchyRole2, implements: Vec<crate::models::HaDto>, inheritors: Vec<crate::models::HaDto>, record: bool) -> HaDto {
        HaDto {
            id,
            name,
            fields,
            hierarchy_role,
            hierarchy_role2,
            extends: None,
            implements,
            inheritors,
            description: None,
            deprecation: None,
            experimental: None,
            record,
            feature_flag: None,
            errors_field: None,
        }
    }
}


