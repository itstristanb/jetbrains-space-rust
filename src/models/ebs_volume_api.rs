/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct EbsVolumeApi {
    #[serde(rename = "volumeId")]
    pub volume_id: String,
    #[serde(rename = "volumeName")]
    pub volume_name: String,
    #[serde(rename = "az", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub az: Option<Option<String>>,
    #[serde(rename = "volumeState")]
    pub volume_state: crate::models::VolumeState,
    #[serde(rename = "execution", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub execution: Option<Option<i64>>,
    #[serde(rename = "claimId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub claim_id: Option<Option<i64>>,
}

impl EbsVolumeApi {
    pub fn new(volume_id: String, volume_name: String, volume_state: crate::models::VolumeState) -> EbsVolumeApi {
        EbsVolumeApi {
            volume_id,
            volume_name,
            az: None,
            volume_state,
            execution: None,
            claim_id: None,
        }
    }
}


