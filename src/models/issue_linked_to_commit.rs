/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct IssueLinkedToCommit {
    #[serde(rename = "project")]
    pub project: Box<crate::models::PrProject>,
    #[serde(rename = "repositoryId")]
    pub repository_id: String,
    #[serde(rename = "repositoryName")]
    pub repository_name: String,
    #[serde(rename = "commit")]
    pub commit: Box<crate::models::GitCommitInfo>,
    #[serde(rename = "commitChanges", skip_serializing_if = "Option::is_none")]
    pub commit_changes: Option<Box<crate::models::GitCommitChanges>>,
    #[serde(rename = "commitUrl")]
    pub commit_url: String,
    #[serde(rename = "issuePrefix")]
    pub issue_prefix: String,
    #[serde(rename = "issueId")]
    pub issue_id: String,
}

impl IssueLinkedToCommit {
    pub fn new(project: crate::models::PrProject, repository_id: String, repository_name: String, commit: crate::models::GitCommitInfo, commit_url: String, issue_prefix: String, issue_id: String) -> IssueLinkedToCommit {
        IssueLinkedToCommit {
            project: Box::new(project),
            repository_id,
            repository_name,
            commit: Box::new(commit),
            commit_changes: None,
            commit_url,
            issue_prefix,
            issue_id,
        }
    }
}


