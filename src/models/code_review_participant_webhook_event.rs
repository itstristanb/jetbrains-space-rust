/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CodeReviewParticipantWebhookEvent {
    #[serde(rename = "meta", skip_serializing_if = "Option::is_none")]
    pub meta: Option<Box<crate::models::KMetaMod>>,
    #[serde(rename = "review")]
    pub review: Box<crate::models::CodeReviewRecord>,
    #[serde(rename = "isMergeRequest")]
    pub is_merge_request: bool,
    #[serde(rename = "participant")]
    pub participant: Box<crate::models::TdMemberProfile>,
    #[serde(rename = "reviewerState", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub reviewer_state: Option<Option<Box<crate::models::CodeReviewParticipantWebhookEventReviewerState>>>,
    #[serde(rename = "theirTurn", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub their_turn: Option<Option<Box<crate::models::AbsenceWebhookEventAvailable>>>,
}

impl CodeReviewParticipantWebhookEvent {
    pub fn new(review: crate::models::CodeReviewRecord, is_merge_request: bool, participant: crate::models::TdMemberProfile) -> CodeReviewParticipantWebhookEvent {
        CodeReviewParticipantWebhookEvent {
            meta: None,
            review: Box::new(review),
            is_merge_request,
            participant: Box::new(participant),
            reviewer_state: None,
            their_turn: None,
        }
    }
}


