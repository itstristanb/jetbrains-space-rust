/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct KbBook {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "archived")]
    pub archived: bool,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "summary")]
    pub summary: String,
    #[serde(rename = "updated")]
    pub updated: i64,
    #[serde(rename = "updatedBy", skip_serializing_if = "Option::is_none")]
    pub updated_by: Option<Box<crate::models::CPrincipal>>,
    #[serde(rename = "alias")]
    pub alias: String,
    #[serde(rename = "contexts", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub contexts: Option<Option<Vec<crate::models::KbBookContext>>>,
    #[serde(rename = "project", skip_serializing_if = "Option::is_none")]
    pub project: Option<Box<crate::models::PrProject>>,
    #[serde(rename = "rootFolder")]
    pub root_folder: Box<crate::models::KbFolder>,
}

impl KbBook {
    pub fn new(id: String, archived: bool, name: String, summary: String, updated: i64, alias: String, root_folder: crate::models::KbFolder) -> KbBook {
        KbBook {
            id,
            archived,
            name,
            summary,
            updated,
            updated_by: None,
            alias,
            contexts: None,
            project: None,
            root_folder: Box::new(root_folder),
        }
    }
}


