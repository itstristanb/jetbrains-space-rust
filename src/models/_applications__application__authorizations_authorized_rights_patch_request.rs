/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApplicationsApplicationAuthorizationsAuthorizedRightsPatchRequest {
    #[serde(rename = "contextIdentifier")]
    pub context_identifier: Box<crate::models::PermissionContextIdentifier>,
    #[serde(rename = "updates")]
    pub updates: Vec<crate::models::RightUpdateDto>,
    #[serde(rename = "actor", skip_serializing_if = "Option::is_none")]
    pub actor: Option<Box<crate::models::PrincipalIn>>,
    #[serde(rename = "comment", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub comment: Option<Option<String>>,
}

impl ApplicationsApplicationAuthorizationsAuthorizedRightsPatchRequest {
    pub fn new(context_identifier: crate::models::PermissionContextIdentifier, updates: Vec<crate::models::RightUpdateDto>) -> ApplicationsApplicationAuthorizationsAuthorizedRightsPatchRequest {
        ApplicationsApplicationAuthorizationsAuthorizedRightsPatchRequest {
            context_identifier: Box::new(context_identifier),
            updates,
            actor: None,
            comment: None,
        }
    }
}


