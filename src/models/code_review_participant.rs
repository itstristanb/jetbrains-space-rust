/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CodeReviewParticipant {
    #[serde(rename = "user")]
    pub user: Box<crate::models::TdMemberProfile>,
    #[serde(rename = "role")]
    pub role: crate::models::CodeReviewParticipantRole,
    #[serde(rename = "hasOwnedFiles", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub has_owned_files: Option<Option<bool>>,
    #[serde(rename = "reviewOnlyOwnedFiles", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub review_only_owned_files: Option<Option<bool>>,
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<crate::models::ReviewerState>,
    #[serde(rename = "isApproveSticky", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub is_approve_sticky: Option<Option<bool>>,
    #[serde(rename = "theirTurn", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub their_turn: Option<Option<bool>>,
    #[serde(rename = "qualityGateSlots", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub quality_gate_slots: Option<Option<Vec<crate::models::CodeReviewParticipantQualityGateSlot>>>,
    #[serde(rename = "codeOwnerSlots", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub code_owner_slots: Option<Option<Vec<crate::models::CodeReviewParticipantCodeOwnerSlot>>>,
    #[serde(rename = "addedAt", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub added_at: Option<Option<String>>,
}

impl CodeReviewParticipant {
    pub fn new(user: crate::models::TdMemberProfile, role: crate::models::CodeReviewParticipantRole) -> CodeReviewParticipant {
        CodeReviewParticipant {
            user: Box::new(user),
            role,
            has_owned_files: None,
            review_only_owned_files: None,
            state: None,
            is_approve_sticky: None,
            their_turn: None,
            quality_gate_slots: None,
            code_owner_slots: None,
            added_at: None,
        }
    }
}


