/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct KbArticle {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "archived")]
    pub archived: bool,
    #[serde(rename = "title")]
    pub title: String,
    #[serde(rename = "book")]
    pub book: Box<crate::models::KbBook>,
    #[serde(rename = "folder")]
    pub folder: Box<crate::models::KbFolder>,
    #[serde(rename = "documentId")]
    pub document_id: String,
    #[serde(rename = "documentRef")]
    pub document_ref: Box<crate::models::Document>,
    #[serde(rename = "created")]
    pub created: String,
    #[serde(rename = "createdBy", skip_serializing_if = "Option::is_none")]
    pub created_by: Option<Box<crate::models::CPrincipal>>,
    #[serde(rename = "updated")]
    pub updated: String,
    #[serde(rename = "updatedBy", skip_serializing_if = "Option::is_none")]
    pub updated_by: Option<Box<crate::models::CPrincipal>>,
    #[serde(rename = "alias")]
    pub alias: String,
}

impl KbArticle {
    pub fn new(id: String, archived: bool, title: String, book: crate::models::KbBook, folder: crate::models::KbFolder, document_id: String, document_ref: crate::models::Document, created: String, updated: String, alias: String) -> KbArticle {
        KbArticle {
            id,
            archived,
            title,
            book: Box::new(book),
            folder: Box::new(folder),
            document_id,
            document_ref: Box::new(document_ref),
            created,
            created_by: None,
            updated,
            updated_by: None,
            alias,
        }
    }
}


