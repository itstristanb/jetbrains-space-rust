/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct InlineDiff {
    #[serde(rename = "type")]
    pub r#type: crate::models::GitFileType,
    #[serde(rename = "lines")]
    pub lines: Vec<crate::models::InlineDiffLine>,
    #[serde(rename = "hasFilteredFragments")]
    pub has_filtered_fragments: bool,
    #[serde(rename = "lineEndingDiff", skip_serializing_if = "Option::is_none")]
    pub line_ending_diff: Option<Box<crate::models::LineEndingDiff>>,
    #[serde(rename = "bomDiff", skip_serializing_if = "Option::is_none")]
    pub bom_diff: Option<Box<crate::models::BomDiff>>,
    #[serde(rename = "scopes", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub scopes: Option<Option<Vec<crate::models::CodeScopeRange>>>,
}

impl InlineDiff {
    pub fn new(r#type: crate::models::GitFileType, lines: Vec<crate::models::InlineDiffLine>, has_filtered_fragments: bool) -> InlineDiff {
        InlineDiff {
            r#type,
            lines,
            has_filtered_fragments,
            line_ending_diff: None,
            bom_diff: None,
            scopes: None,
        }
    }
}


