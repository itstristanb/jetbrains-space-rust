/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct PublicHolidayCalendarRecord {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "archived")]
    pub archived: bool,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "firstDate", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub first_date: Option<Option<String>>,
    #[serde(rename = "lastDate", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub last_date: Option<Option<String>>,
    #[serde(rename = "eventsCount")]
    pub events_count: i32,
    #[serde(rename = "location")]
    pub location: Box<crate::models::TdLocation>,
}

impl PublicHolidayCalendarRecord {
    pub fn new(id: String, archived: bool, name: String, events_count: i32, location: crate::models::TdLocation) -> PublicHolidayCalendarRecord {
        PublicHolidayCalendarRecord {
            id,
            archived,
            name,
            first_date: None,
            last_date: None,
            events_count,
            location: Box::new(location),
        }
    }
}


