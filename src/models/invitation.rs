/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Invitation {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "expiresAt")]
    pub expires_at: String,
    #[serde(rename = "inviteeEmail")]
    pub invitee_email: String,
    #[serde(rename = "inviteeEmailBlocked")]
    pub invitee_email_blocked: bool,
    #[serde(rename = "inviteeEmailBlockedReason", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub invitee_email_blocked_reason: Option<Option<String>>,
    #[serde(rename = "inviteeFirstName", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub invitee_first_name: Option<Option<String>>,
    #[serde(rename = "inviteeLastName", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub invitee_last_name: Option<Option<String>>,
    #[serde(rename = "invitee", skip_serializing_if = "Option::is_none")]
    pub invitee: Option<Box<crate::models::TdMemberProfile>>,
    #[serde(rename = "inviter")]
    pub inviter: Box<crate::models::CPrincipal>,
    #[serde(rename = "team", skip_serializing_if = "Option::is_none")]
    pub team: Option<Box<crate::models::TdTeam>>,
    #[serde(rename = "role", skip_serializing_if = "Option::is_none")]
    pub role: Option<Box<crate::models::TdRole>>,
    #[serde(rename = "project", skip_serializing_if = "Option::is_none")]
    pub project: Option<Box<crate::models::PrProject>>,
    #[serde(rename = "projectRole", skip_serializing_if = "Option::is_none")]
    pub project_role: Option<Box<crate::models::ProjectTeamRole>>,
    #[serde(rename = "globalRole", skip_serializing_if = "Option::is_none")]
    pub global_role: Option<Box<crate::models::GlobalRole>>,
    #[serde(rename = "revoked", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub revoked: Option<Option<bool>>,
}

impl Invitation {
    pub fn new(id: String, expires_at: String, invitee_email: String, invitee_email_blocked: bool, inviter: crate::models::CPrincipal) -> Invitation {
        Invitation {
            id,
            expires_at,
            invitee_email,
            invitee_email_blocked,
            invitee_email_blocked_reason: None,
            invitee_first_name: None,
            invitee_last_name: None,
            invitee: None,
            inviter: Box::new(inviter),
            team: None,
            role: None,
            project: None,
            project_role: None,
            global_role: None,
            revoked: None,
        }
    }
}


