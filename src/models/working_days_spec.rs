/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct WorkingDaysSpec {
    #[serde(rename = "days")]
    pub days: Vec<crate::models::Workday>,
    #[serde(rename = "workingHours", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub working_hours: Option<Option<Vec<crate::models::WeekDayTimeInterval>>>,
    #[serde(rename = "notificationHours", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub notification_hours: Option<Option<Vec<crate::models::WeekDayTimeInterval>>>,
    #[serde(rename = "timezone", skip_serializing_if = "Option::is_none")]
    pub timezone: Option<Box<crate::models::ATimeZone>>,
    #[serde(rename = "boundWeekdays", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub bound_weekdays: Option<Option<Vec<i32>>>,
    #[serde(rename = "locations", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub locations: Option<Option<Vec<crate::models::WeekDayLocation>>>,
}

impl WorkingDaysSpec {
    pub fn new(days: Vec<crate::models::Workday>) -> WorkingDaysSpec {
        WorkingDaysSpec {
            days,
            working_hours: None,
            notification_hours: None,
            timezone: None,
            bound_weekdays: None,
            locations: None,
        }
    }
}


