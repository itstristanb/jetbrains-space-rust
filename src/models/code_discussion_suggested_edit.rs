/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CodeDiscussionSuggestedEdit {
    #[serde(rename = "suggestionCommitId")]
    pub suggestion_commit_id: String,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<crate::models::CodeDiscussionSuggestedEditState>,
    #[serde(rename = "resolvedBy", skip_serializing_if = "Option::is_none")]
    pub resolved_by: Option<Box<crate::models::CPrincipal>>,
    #[serde(rename = "filePath")]
    pub file_path: String,
    #[serde(rename = "hasConflicts")]
    pub has_conflicts: bool,
    #[serde(rename = "identicalContents", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub identical_contents: Option<Option<bool>>,
    #[serde(rename = "startLineIndex")]
    pub start_line_index: i32,
    #[serde(rename = "endLineIndexInclusive")]
    pub end_line_index_inclusive: i32,
}

impl CodeDiscussionSuggestedEdit {
    pub fn new(suggestion_commit_id: String, file_path: String, has_conflicts: bool, start_line_index: i32, end_line_index_inclusive: i32) -> CodeDiscussionSuggestedEdit {
        CodeDiscussionSuggestedEdit {
            suggestion_commit_id,
            status: None,
            resolved_by: None,
            file_path,
            has_conflicts,
            identical_contents: None,
            start_line_index,
            end_line_index_inclusive,
        }
    }
}


