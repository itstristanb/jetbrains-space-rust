/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct M2ChannelRecord {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "contact")]
    pub contact: Box<crate::models::M2ChannelContact>,
    #[serde(rename = "totalMessages")]
    pub total_messages: i32,
    #[serde(rename = "lastMessage", skip_serializing_if = "Option::is_none")]
    pub last_message: Option<Box<crate::models::MessageInfo>>,
    #[serde(rename = "participants", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub participants: Option<Option<Vec<crate::models::ChannelParticipant>>>,
    #[serde(rename = "channelArchived", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub channel_archived: Option<Option<bool>>,
    #[serde(rename = "archived")]
    pub archived: bool,
    #[serde(rename = "pinnedMessages", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub pinned_messages: Option<Option<Vec<crate::models::ChannelItemRecord>>>,
    #[serde(rename = "content", skip_serializing_if = "Option::is_none")]
    pub content: Option<Box<crate::models::M2ChannelContentInfo>>,
}

impl M2ChannelRecord {
    pub fn new(id: String, contact: crate::models::M2ChannelContact, total_messages: i32, archived: bool) -> M2ChannelRecord {
        M2ChannelRecord {
            id,
            contact: Box::new(contact),
            total_messages,
            last_message: None,
            participants: None,
            channel_archived: None,
            archived,
            pinned_messages: None,
            content: None,
        }
    }
}


