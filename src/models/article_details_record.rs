/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ArticleDetailsRecord {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "archived")]
    pub archived: bool,
    #[serde(rename = "event", skip_serializing_if = "Option::is_none")]
    pub event: Option<Box<crate::models::MeetingRecord>>,
    #[serde(rename = "teams", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub teams: Option<Option<Vec<crate::models::TdTeam>>>,
    #[serde(rename = "locations", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub locations: Option<Option<Vec<crate::models::TdLocation>>>,
    #[serde(rename = "externalEntityInfo", skip_serializing_if = "Option::is_none")]
    pub external_entity_info: Option<Box<crate::models::ExternalEntityInfoRecord>>,
}

impl ArticleDetailsRecord {
    pub fn new(id: String, archived: bool) -> ArticleDetailsRecord {
        ArticleDetailsRecord {
            id,
            archived,
            event: None,
            teams: None,
            locations: None,
            external_entity_info: None,
        }
    }
}


