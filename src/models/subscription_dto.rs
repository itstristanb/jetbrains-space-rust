/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SubscriptionDto {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "enabled")]
    pub enabled: bool,
    #[serde(rename = "subscription")]
    pub subscription: Box<crate::models::Subscription>,
    #[serde(rename = "privateFeed", skip_serializing_if = "Option::is_none")]
    pub private_feed: Option<Box<crate::models::PrivateFeed>>,
    #[serde(rename = "application", skip_serializing_if = "Option::is_none")]
    pub application: Option<Box<crate::models::EsApp>>,
    #[serde(rename = "requestedAuthentication", skip_serializing_if = "Option::is_none")]
    pub requested_authentication: Option<Box<crate::models::SubscriptionRequestedAuthorizations>>,
}

impl SubscriptionDto {
    pub fn new(id: String, name: String, enabled: bool, subscription: crate::models::Subscription) -> SubscriptionDto {
        SubscriptionDto {
            id,
            name,
            enabled,
            subscription: Box::new(subscription),
            private_feed: None,
            application: None,
            requested_authentication: None,
        }
    }
}


