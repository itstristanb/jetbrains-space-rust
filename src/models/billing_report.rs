/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct BillingReport {
    #[serde(rename = "plans")]
    pub plans: Vec<crate::models::PurchasedBillingPlan>,
    #[serde(rename = "reportDays")]
    pub report_days: Vec<crate::models::BillingReportDay>,
    #[serde(rename = "bandwidthAllocation", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub bandwidth_allocation: Option<Option<i64>>,
    #[serde(rename = "ciAllocation", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub ci_allocation: Option<Option<i64>>,
    #[serde(rename = "serverToday")]
    pub server_today: String,
    #[serde(rename = "earliestBillingDate")]
    pub earliest_billing_date: String,
}

impl BillingReport {
    pub fn new(plans: Vec<crate::models::PurchasedBillingPlan>, report_days: Vec<crate::models::BillingReportDay>, server_today: String, earliest_billing_date: String) -> BillingReport {
        BillingReport {
            plans,
            report_days,
            bandwidth_allocation: None,
            ci_allocation: None,
            server_today,
            earliest_billing_date,
        }
    }
}


