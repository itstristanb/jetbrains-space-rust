/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct PurchasedBillingPlan {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "jetSalesId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub jet_sales_id: Option<Option<String>>,
    #[serde(rename = "licenseIssuer", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub license_issuer: Option<Option<String>>,
    #[serde(rename = "installationPublicKey", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub installation_public_key: Option<Option<String>>,
    #[serde(rename = "plan")]
    pub plan: String,
    #[serde(rename = "billingPeriod")]
    pub billing_period: String,
    #[serde(rename = "since")]
    pub since: String,
    #[serde(rename = "till")]
    pub till: String,
    #[serde(rename = "mayUseTill", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub may_use_till: Option<Option<String>>,
    #[serde(rename = "currency")]
    pub currency: Box<crate::models::Currency>,
    #[serde(rename = "addUserPrice")]
    pub add_user_price: f64,
    #[serde(rename = "addStoragePrice")]
    pub add_storage_price: f64,
    #[serde(rename = "addBandwidthPrice")]
    pub add_bandwidth_price: f64,
    #[serde(rename = "addCiCreditPrice")]
    pub add_ci_credit_price: f64,
    #[serde(rename = "minActiveUsers")]
    pub min_active_users: i32,
    #[serde(rename = "prepaidUsers")]
    pub prepaid_users: i32,
    #[serde(rename = "storagePerUser")]
    pub storage_per_user: i32,
    #[serde(rename = "storageOverall")]
    pub storage_overall: i32,
    #[serde(rename = "bandwidthPerUser")]
    pub bandwidth_per_user: i32,
    #[serde(rename = "bandwidthOverall")]
    pub bandwidth_overall: i32,
    #[serde(rename = "ciCredits")]
    pub ci_credits: i32,
    #[serde(rename = "ciCreditsReserve")]
    pub ci_credits_reserve: i32,
    #[serde(rename = "ciCreditsRateForExternalWorker", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub ci_credits_rate_for_external_worker: Option<Option<f64>>,
    #[serde(rename = "integrations")]
    pub integrations: i32,
    #[serde(rename = "searchHistory")]
    pub search_history: i32,
    #[serde(rename = "balance")]
    pub balance: f64,
    #[serde(rename = "hardLimitAmount")]
    pub hard_limit_amount: f64,
    #[serde(rename = "hasCardVerifiedAdmin", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub has_card_verified_admin: Option<Option<bool>>,
    #[serde(rename = "isTrial", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub is_trial: Option<Option<bool>>,
    #[serde(rename = "spentTrials", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub spent_trials: Option<Option<Vec<String>>>,
    #[serde(rename = "trialBasePlan", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub trial_base_plan: Option<Option<String>>,
}

impl PurchasedBillingPlan {
    pub fn new(id: String, plan: String, billing_period: String, since: String, till: String, currency: crate::models::Currency, add_user_price: f64, add_storage_price: f64, add_bandwidth_price: f64, add_ci_credit_price: f64, min_active_users: i32, prepaid_users: i32, storage_per_user: i32, storage_overall: i32, bandwidth_per_user: i32, bandwidth_overall: i32, ci_credits: i32, ci_credits_reserve: i32, integrations: i32, search_history: i32, balance: f64, hard_limit_amount: f64) -> PurchasedBillingPlan {
        PurchasedBillingPlan {
            id,
            jet_sales_id: None,
            license_issuer: None,
            installation_public_key: None,
            plan,
            billing_period,
            since,
            till,
            may_use_till: None,
            currency: Box::new(currency),
            add_user_price,
            add_storage_price,
            add_bandwidth_price,
            add_ci_credit_price,
            min_active_users,
            prepaid_users,
            storage_per_user,
            storage_overall,
            bandwidth_per_user,
            bandwidth_overall,
            ci_credits,
            ci_credits_reserve,
            ci_credits_rate_for_external_worker: None,
            integrations,
            search_history,
            balance,
            hard_limit_amount,
            has_card_verified_admin: None,
            is_trial: None,
            spent_trials: None,
            trial_base_plan: None,
        }
    }
}


