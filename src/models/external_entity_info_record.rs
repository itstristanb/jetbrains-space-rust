/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ExternalEntityInfoRecord {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "archived")]
    pub archived: bool,
    #[serde(rename = "externalId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub external_id: Option<Option<String>>,
    #[serde(rename = "externalName", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub external_name: Option<Option<String>>,
    #[serde(rename = "externalUrl", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub external_url: Option<Option<String>>,
    #[serde(rename = "transaction")]
    pub transaction: Box<crate::models::ImportTransactionRecord>,
}

impl ExternalEntityInfoRecord {
    pub fn new(id: String, archived: bool, transaction: crate::models::ImportTransactionRecord) -> ExternalEntityInfoRecord {
        ExternalEntityInfoRecord {
            id,
            archived,
            external_id: None,
            external_name: None,
            external_url: None,
            transaction: Box::new(transaction),
        }
    }
}


