/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ExternalIssue {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "archived")]
    pub archived: bool,
    #[serde(rename = "issueId")]
    pub issue_id: String,
    #[serde(rename = "issuePrefix")]
    pub issue_prefix: String,
    #[serde(rename = "url")]
    pub url: String,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<Box<crate::models::IssueStatus>>,
    #[serde(rename = "summary", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub summary: Option<Option<String>>,
    #[serde(rename = "fields", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub fields: Option<Option<Vec<crate::models::ExternalIssueField>>>,
    #[serde(rename = "codeReviewIds")]
    pub code_review_ids: Vec<String>,
}

impl ExternalIssue {
    pub fn new(id: String, archived: bool, issue_id: String, issue_prefix: String, url: String, code_review_ids: Vec<String>) -> ExternalIssue {
        ExternalIssue {
            id,
            archived,
            issue_id,
            issue_prefix,
            url,
            status: None,
            summary: None,
            fields: None,
            code_review_ids,
        }
    }
}


