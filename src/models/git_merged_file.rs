/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct GitMergedFile {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "oldName", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub old_name: Option<Option<String>>,
    #[serde(rename = "baseId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub base_id: Option<Option<String>>,
    #[serde(rename = "sourceId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub source_id: Option<Option<String>>,
    #[serde(rename = "targetId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub target_id: Option<Option<String>>,
    #[serde(rename = "diffSize", skip_serializing_if = "Option::is_none")]
    pub diff_size: Option<Box<crate::models::GitDiffSize>>,
    #[serde(rename = "entryType")]
    pub entry_type: crate::models::GitEntryType,
    #[serde(rename = "conflicting")]
    pub conflicting: bool,
    #[serde(rename = "properties", skip_serializing_if = "Option::is_none")]
    pub properties: Option<Box<crate::models::GitFileProperties>>,
}

impl GitMergedFile {
    pub fn new(name: String, entry_type: crate::models::GitEntryType, conflicting: bool) -> GitMergedFile {
        GitMergedFile {
            name,
            old_name: None,
            base_id: None,
            source_id: None,
            target_id: None,
            diff_size: None,
            entry_type,
            conflicting,
            properties: None,
        }
    }
}


