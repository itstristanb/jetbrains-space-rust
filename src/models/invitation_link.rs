/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct InvitationLink {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "createdBy")]
    pub created_by: Box<crate::models::CPrincipal>,
    #[serde(rename = "createdAt")]
    pub created_at: String,
    #[serde(rename = "expiresAt", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub expires_at: Option<Option<String>>,
    #[serde(rename = "inviteeLimit")]
    pub invitee_limit: i32,
    #[serde(rename = "inviteeUsage")]
    pub invitee_usage: i32,
    #[serde(rename = "team", skip_serializing_if = "Option::is_none")]
    pub team: Option<Box<crate::models::TdTeam>>,
    #[serde(rename = "position", skip_serializing_if = "Option::is_none")]
    pub position: Option<Box<crate::models::TdRole>>,
    #[serde(rename = "project", skip_serializing_if = "Option::is_none")]
    pub project: Option<Box<crate::models::PrProject>>,
    #[serde(rename = "globalRole", skip_serializing_if = "Option::is_none")]
    pub global_role: Option<Box<crate::models::GlobalRole>>,
    #[serde(rename = "projectRole")]
    pub project_role: Box<crate::models::ProjectTeamRole>,
    #[serde(rename = "link", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub link: Option<Option<String>>,
    #[serde(rename = "deleted")]
    pub deleted: bool,
}

impl InvitationLink {
    pub fn new(id: String, name: String, created_by: crate::models::CPrincipal, created_at: String, invitee_limit: i32, invitee_usage: i32, project_role: crate::models::ProjectTeamRole, deleted: bool) -> InvitationLink {
        InvitationLink {
            id,
            name,
            created_by: Box::new(created_by),
            created_at,
            expires_at: None,
            invitee_limit,
            invitee_usage,
            team: None,
            position: None,
            project: None,
            global_role: None,
            project_role: Box::new(project_role),
            link: None,
            deleted,
        }
    }
}


