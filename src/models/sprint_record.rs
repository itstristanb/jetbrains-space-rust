/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SprintRecord {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "archived")]
    pub archived: bool,
    #[serde(rename = "board")]
    pub board: Box<crate::models::BoardRecord>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "state")]
    pub state: crate::models::SprintState,
    #[serde(rename = "from")]
    pub from: String,
    #[serde(rename = "to")]
    pub to: String,
    #[serde(rename = "description", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub description: Option<Option<String>>,
    #[serde(rename = "launch")]
    pub launch: Box<crate::models::SprintLaunch>,
}

impl SprintRecord {
    pub fn new(id: String, archived: bool, board: crate::models::BoardRecord, name: String, state: crate::models::SprintState, from: String, to: String, launch: crate::models::SprintLaunch) -> SprintRecord {
        SprintRecord {
            id,
            archived,
            board: Box::new(board),
            name,
            state,
            from,
            to,
            description: None,
            launch: Box::new(launch),
        }
    }
}


