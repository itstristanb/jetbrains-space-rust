/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct HaModel {
    #[serde(rename = "dto")]
    pub dto: Vec<crate::models::HaDto>,
    #[serde(rename = "enums")]
    pub enums: Vec<crate::models::HaEnum>,
    #[serde(rename = "urlParams")]
    pub url_params: Vec<crate::models::HaUrlParameter>,
    #[serde(rename = "resources")]
    pub resources: Vec<crate::models::HaResource>,
    #[serde(rename = "allResources")]
    pub all_resources: Vec<crate::models::HaResource>,
    #[serde(rename = "menuIds")]
    pub menu_ids: Vec<crate::models::HaMenuId>,
    #[serde(rename = "featureFlags", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub feature_flags: Option<Option<Vec<crate::models::HaFeatureFlag>>>,
}

impl HaModel {
    pub fn new(dto: Vec<crate::models::HaDto>, enums: Vec<crate::models::HaEnum>, url_params: Vec<crate::models::HaUrlParameter>, resources: Vec<crate::models::HaResource>, all_resources: Vec<crate::models::HaResource>, menu_ids: Vec<crate::models::HaMenuId>) -> HaModel {
        HaModel {
            dto,
            enums,
            url_params,
            resources,
            all_resources,
            menu_ids,
            feature_flags: None,
        }
    }
}


