/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Document {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "title")]
    pub title: String,
    #[serde(rename = "alias")]
    pub alias: String,
    #[serde(rename = "publicationDetails", skip_serializing_if = "Option::is_none")]
    pub publication_details: Option<Box<crate::models::BlogPublicationDetails>>,
    #[serde(rename = "folderRef", skip_serializing_if = "Option::is_none")]
    pub folder_ref: Option<Box<crate::models::DocumentFolder>>,
    #[serde(rename = "bodyType", skip_serializing_if = "Option::is_none")]
    pub body_type: Option<crate::models::DocumentBodyType>,
    #[serde(rename = "bodyInfo", skip_serializing_if = "Option::is_none")]
    pub body_info: Option<Box<crate::models::DocumentBodyInfo>>,
    #[serde(rename = "archived")]
    pub archived: bool,
    #[serde(rename = "archivedBy", skip_serializing_if = "Option::is_none")]
    pub archived_by: Option<Box<crate::models::CPrincipal>>,
    #[serde(rename = "archivedAt", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub archived_at: Option<Option<String>>,
    #[serde(rename = "createdBy", skip_serializing_if = "Option::is_none")]
    pub created_by: Option<Box<crate::models::CPrincipal>>,
    #[serde(rename = "created", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub created: Option<Option<String>>,
    #[serde(rename = "modifiedBy", skip_serializing_if = "Option::is_none")]
    pub modified_by: Option<Box<crate::models::CPrincipal>>,
    #[serde(rename = "modified")]
    pub modified: String,
    #[serde(rename = "documentBody")]
    pub document_body: Box<crate::models::DocumentBodyInfo>,
    #[serde(rename = "body", skip_serializing_if = "Option::is_none")]
    pub body: Option<Box<crate::models::DocumentHttpBody>>,
}

impl Document {
    pub fn new(id: String, title: String, alias: String, archived: bool, modified: String, document_body: crate::models::DocumentBodyInfo) -> Document {
        Document {
            id,
            title,
            alias,
            publication_details: None,
            folder_ref: None,
            body_type: None,
            body_info: None,
            archived,
            archived_by: None,
            archived_at: None,
            created_by: None,
            created: None,
            modified_by: None,
            modified,
            document_body: Box::new(document_body),
            body: None,
        }
    }
}


