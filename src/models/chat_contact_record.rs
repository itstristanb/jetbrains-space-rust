/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ChatContactRecord {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "archived")]
    pub archived: bool,
    #[serde(rename = "key")]
    pub key: String,
    #[serde(rename = "details")]
    pub details: Box<crate::models::ChatContactDetails>,
    #[serde(rename = "channelType")]
    pub channel_type: String,
    #[serde(rename = "lastMessage", skip_serializing_if = "Option::is_none")]
    pub last_message: Option<Box<crate::models::MessageInfo>>,
    #[serde(rename = "unreadStatus", skip_serializing_if = "Option::is_none")]
    pub unread_status: Option<Box<crate::models::M2UnreadStatus>>,
    #[serde(rename = "readTime", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub read_time: Option<Option<String>>,
    #[serde(rename = "subscribedSince")]
    pub subscribed_since: String,
    #[serde(rename = "pinned")]
    pub pinned: bool,
    #[serde(rename = "pinnedPrevId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub pinned_prev_id: Option<Option<String>>,
    #[serde(rename = "draft", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub draft: Option<Option<String>>,
    #[serde(rename = "draftTime", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub draft_time: Option<Option<i64>>,
    #[serde(rename = "lastChildMessageTime", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub last_child_message_time: Option<Option<i64>>,
    #[serde(rename = "deleted", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub deleted: Option<Option<bool>>,
    #[serde(rename = "muted", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub muted: Option<Option<bool>>,
}

impl ChatContactRecord {
    pub fn new(id: String, archived: bool, key: String, details: crate::models::ChatContactDetails, channel_type: String, subscribed_since: String, pinned: bool) -> ChatContactRecord {
        ChatContactRecord {
            id,
            archived,
            key,
            details: Box::new(details),
            channel_type,
            last_message: None,
            unread_status: None,
            read_time: None,
            subscribed_since,
            pinned,
            pinned_prev_id: None,
            draft: None,
            draft_time: None,
            last_child_message_time: None,
            deleted: None,
            muted: None,
        }
    }
}


