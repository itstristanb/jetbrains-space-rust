/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct WebhookRecord {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "archived")]
    pub archived: bool,
    #[serde(rename = "app")]
    pub app: Box<crate::models::EsApp>,
    #[serde(rename = "subscriptions")]
    pub subscriptions: Vec<crate::models::SubscriptionDto>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "description", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub description: Option<Option<String>>,
    #[serde(rename = "useAppEndpoint")]
    pub use_app_endpoint: bool,
    #[serde(rename = "endpoint")]
    pub endpoint: Box<crate::models::EndpointDto>,
    #[serde(rename = "useAppEndpointAuth")]
    pub use_app_endpoint_auth: bool,
    #[serde(rename = "endpointAuth")]
    pub endpoint_auth: Box<crate::models::EndpointAuthDto>,
    #[serde(rename = "enabled")]
    pub enabled: bool,
    #[serde(rename = "acceptedHttpResponseCodes")]
    pub accepted_http_response_codes: Vec<i32>,
    #[serde(rename = "doRetries")]
    pub do_retries: bool,
    #[serde(rename = "payloadFields", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub payload_fields: Option<Option<String>>,
    #[serde(rename = "payloadTemplate", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub payload_template: Option<Option<String>>,
    #[serde(rename = "payloadType", skip_serializing_if = "Option::is_none")]
    pub payload_type: Option<crate::models::PayloadType>,
}

impl WebhookRecord {
    pub fn new(id: String, archived: bool, app: crate::models::EsApp, subscriptions: Vec<crate::models::SubscriptionDto>, name: String, use_app_endpoint: bool, endpoint: crate::models::EndpointDto, use_app_endpoint_auth: bool, endpoint_auth: crate::models::EndpointAuthDto, enabled: bool, accepted_http_response_codes: Vec<i32>, do_retries: bool) -> WebhookRecord {
        WebhookRecord {
            id,
            archived,
            app: Box::new(app),
            subscriptions,
            name,
            description: None,
            use_app_endpoint,
            endpoint: Box::new(endpoint),
            use_app_endpoint_auth,
            endpoint_auth: Box::new(endpoint_auth),
            enabled,
            accepted_http_response_codes,
            do_retries,
            payload_fields: None,
            payload_template: None,
            payload_type: None,
        }
    }
}


