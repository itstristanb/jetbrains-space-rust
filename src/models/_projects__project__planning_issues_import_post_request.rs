/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProjectsProjectPlanningIssuesImportPostRequest {
    #[serde(rename = "metadata")]
    pub metadata: Box<crate::models::ImportMetadata>,
    #[serde(rename = "issues")]
    pub issues: Vec<crate::models::ImportIssue>,
    #[serde(rename = "assigneeMissingPolicy", skip_serializing_if = "Option::is_none")]
    pub assignee_missing_policy: Option<Box<crate::models::ImportMissingPolicy>>,
    #[serde(rename = "statusMissingPolicy", skip_serializing_if = "Option::is_none")]
    pub status_missing_policy: Option<Box<crate::models::ImportMissingPolicy>>,
    #[serde(rename = "onExistsPolicy", skip_serializing_if = "Option::is_none")]
    pub on_exists_policy: Option<Box<crate::models::ImportExistsPolicy>>,
    #[serde(rename = "dryRun")]
    pub dry_run: bool,
    #[serde(rename = "notifySubscribers", skip_serializing_if = "Option::is_none")]
    pub notify_subscribers: Option<bool>,
}

impl ProjectsProjectPlanningIssuesImportPostRequest {
    pub fn new(metadata: crate::models::ImportMetadata, issues: Vec<crate::models::ImportIssue>, dry_run: bool) -> ProjectsProjectPlanningIssuesImportPostRequest {
        ProjectsProjectPlanningIssuesImportPostRequest {
            metadata: Box::new(metadata),
            issues,
            assignee_missing_policy: None,
            status_missing_policy: None,
            on_exists_policy: None,
            dry_run,
            notify_subscribers: None,
        }
    }
}


