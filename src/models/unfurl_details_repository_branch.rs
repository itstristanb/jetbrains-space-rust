/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct UnfurlDetailsRepositoryBranch {
    #[serde(rename = "project")]
    pub project: Box<crate::models::PrProject>,
    #[serde(rename = "repository")]
    pub repository: String,
    #[serde(rename = "branchHead")]
    pub branch_head: String,
    #[serde(rename = "deleted")]
    pub deleted: bool,
    #[serde(rename = "isDefault", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub is_default: Option<Option<bool>>,
    #[serde(rename = "tagSize", skip_serializing_if = "Option::is_none")]
    pub tag_size: Option<crate::models::UnfurlDetailsRepositoryBranchJbsBranchTagSize>,
}

impl UnfurlDetailsRepositoryBranch {
    pub fn new(project: crate::models::PrProject, repository: String, branch_head: String, deleted: bool) -> UnfurlDetailsRepositoryBranch {
        UnfurlDetailsRepositoryBranch {
            project: Box::new(project),
            repository,
            branch_head,
            deleted,
            is_default: None,
            tag_size: None,
        }
    }
}


