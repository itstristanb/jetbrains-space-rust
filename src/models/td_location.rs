/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct TdLocation {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "timezone", skip_serializing_if = "Option::is_none")]
    pub timezone: Option<Box<crate::models::ATimeZoneWithOffset>>,
    #[serde(rename = "tz", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub tz: Option<Option<String>>,
    #[serde(rename = "workdays", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub workdays: Option<Option<Vec<i32>>>,
    #[serde(rename = "phones")]
    pub phones: Vec<String>,
    #[serde(rename = "emails")]
    pub emails: Vec<String>,
    #[serde(rename = "equipment", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub equipment: Option<Option<Vec<String>>>,
    #[serde(rename = "description", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub description: Option<Option<String>>,
    #[serde(rename = "address", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub address: Option<Option<String>>,
    #[serde(rename = "parent", skip_serializing_if = "Option::is_none")]
    pub parent: Option<Box<crate::models::TdLocation>>,
    #[serde(rename = "type")]
    pub r#type: String,
    #[serde(rename = "mapId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub map_id: Option<Option<String>>,
    #[serde(rename = "capacity", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub capacity: Option<Option<i32>>,
    #[serde(rename = "channelId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub channel_id: Option<Option<String>>,
    #[serde(rename = "archived")]
    pub archived: bool,
    #[serde(rename = "equipment2", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub equipment2: Option<Option<Vec<crate::models::TdLocationEquipmentTypeRecord>>>,
}

impl TdLocation {
    pub fn new(id: String, name: String, phones: Vec<String>, emails: Vec<String>, r#type: String, archived: bool) -> TdLocation {
        TdLocation {
            id,
            name,
            timezone: None,
            tz: None,
            workdays: None,
            phones,
            emails,
            equipment: None,
            description: None,
            address: None,
            parent: None,
            r#type,
            map_id: None,
            capacity: None,
            channel_id: None,
            archived,
            equipment2: None,
        }
    }
}


