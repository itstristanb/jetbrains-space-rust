/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ContainerManifest {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "digest")]
    pub digest: String,
    #[serde(rename = "tags")]
    pub tags: Vec<String>,
    #[serde(rename = "created")]
    pub created: i64,
    #[serde(rename = "schemaVersion")]
    pub schema_version: i32,
    #[serde(rename = "mediaType")]
    pub media_type: String,
    #[serde(rename = "manifestType")]
    pub manifest_type: String,
    #[serde(rename = "totalSize")]
    pub total_size: i64,
    #[serde(rename = "image", skip_serializing_if = "Option::is_none")]
    pub image: Option<Box<crate::models::ContainerImage>>,
    #[serde(rename = "chart", skip_serializing_if = "Option::is_none")]
    pub chart: Option<Box<crate::models::ContainerHelmChart>>,
}

impl ContainerManifest {
    pub fn new(name: String, digest: String, tags: Vec<String>, created: i64, schema_version: i32, media_type: String, manifest_type: String, total_size: i64) -> ContainerManifest {
        ContainerManifest {
            name,
            digest,
            tags,
            created,
            schema_version,
            media_type,
            manifest_type,
            total_size,
            image: None,
            chart: None,
        }
    }
}


