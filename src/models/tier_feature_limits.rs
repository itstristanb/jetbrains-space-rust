/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct TierFeatureLimits {
    #[serde(rename = "tier")]
    pub tier: crate::models::Tier,
    #[serde(rename = "storageLimit", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub storage_limit: Option<Option<i64>>,
    #[serde(rename = "trueTier", skip_serializing_if = "Option::is_none")]
    pub true_tier: Option<crate::models::Tier>,
    #[serde(rename = "hasCardVerifiedAdmin", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub has_card_verified_admin: Option<Option<bool>>,
    #[serde(rename = "applications")]
    pub applications: Box<crate::models::TierEntityUsage>,
    #[serde(rename = "searchHistoryLimit")]
    pub search_history_limit: i32,
    #[serde(rename = "availableTrials", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub available_trials: Option<Option<Vec<crate::models::AvailableTrial>>>,
}

impl TierFeatureLimits {
    pub fn new(tier: crate::models::Tier, applications: crate::models::TierEntityUsage, search_history_limit: i32) -> TierFeatureLimits {
        TierFeatureLimits {
            tier,
            storage_limit: None,
            true_tier: None,
            has_card_verified_admin: None,
            applications: Box::new(applications),
            search_history_limit,
            available_trials: None,
        }
    }
}


