/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct TeamMembershipEvent {
    #[serde(rename = "meta")]
    pub meta: Box<crate::models::KMetaMod>,
    #[serde(rename = "membership")]
    pub membership: Box<crate::models::TdMembership>,
    #[serde(rename = "team", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub team: Option<Option<Box<crate::models::TeamMembershipEventTeam>>>,
    #[serde(rename = "role", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub role: Option<Option<Box<crate::models::TeamMembershipEventRole>>>,
    #[serde(rename = "lead", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub lead: Option<Option<Box<crate::models::AbsenceWebhookEventAvailable>>>,
    #[serde(rename = "manager", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub manager: Option<Option<Box<crate::models::ApplicationWebhookEventOwner>>>,
    #[serde(rename = "since", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub since: Option<Option<Box<crate::models::AutomationJobEventStartTime>>>,
    #[serde(rename = "till", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub till: Option<Option<Box<crate::models::AutomationJobEventStartTime>>>,
    #[serde(rename = "deleted", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub deleted: Option<Option<Box<crate::models::AbsenceWebhookEventAvailable>>>,
    #[serde(rename = "approvedBy", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub approved_by: Option<Option<Box<crate::models::ApplicationWebhookEventOwner>>>,
}

impl TeamMembershipEvent {
    pub fn new(meta: crate::models::KMetaMod, membership: crate::models::TdMembership) -> TeamMembershipEvent {
        TeamMembershipEvent {
            meta: Box::new(meta),
            membership: Box::new(membership),
            team: None,
            role: None,
            lead: None,
            manager: None,
            since: None,
            till: None,
            deleted: None,
            approved_by: None,
        }
    }
}


