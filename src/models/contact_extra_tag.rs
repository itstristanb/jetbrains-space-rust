/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ContactExtraTag {
    #[serde(rename = "primary")]
    pub primary: String,
    #[serde(rename = "secondary")]
    pub secondary: String,
    #[serde(rename = "issueStatus", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub issue_status: Option<Option<String>>,
    #[serde(rename = "issueStatusColor", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub issue_status_color: Option<Option<String>>,
    #[serde(rename = "issueStatusId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub issue_status_id: Option<Option<String>>,
    #[serde(rename = "issueNumber", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub issue_number: Option<Option<i32>>,
    #[serde(rename = "issueTitle", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub issue_title: Option<Option<String>>,
    #[serde(rename = "projectKey", skip_serializing_if = "Option::is_none")]
    pub project_key: Option<Box<crate::models::ProjectKey>>,
    #[serde(rename = "projectName", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub project_name: Option<Option<String>>,
    #[serde(rename = "projectId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub project_id: Option<Option<String>>,
    #[serde(rename = "assignee", skip_serializing_if = "Option::is_none")]
    pub assignee: Option<Box<crate::models::CPrincipal>>,
    #[serde(rename = "contactThreads", skip_serializing_if = "Option::is_none")]
    pub contact_threads: Option<Box<crate::models::CrThreadContactsRecord>>,
    #[serde(rename = "basicContactThreads", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub basic_contact_threads: Option<Option<Vec<crate::models::BasicThreadContactsRecord>>>,
    #[serde(rename = "reviewState", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub review_state: Option<Option<String>>,
    #[serde(rename = "mergeRequestBranchMerged", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub merge_request_branch_merged: Option<Option<bool>>,
    #[serde(rename = "isMergeRequest", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub is_merge_request: Option<Option<bool>>,
    #[serde(rename = "reviewNumber", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub review_number: Option<Option<i32>>,
    #[serde(rename = "reviewParticipantRole", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub review_participant_role: Option<Option<String>>,
    #[serde(rename = "reviewerState", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub reviewer_state: Option<Option<String>>,
    #[serde(rename = "reviewTheirTurn", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub review_their_turn: Option<Option<bool>>,
    #[serde(rename = "targetMergeRequestBranchHead", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub target_merge_request_branch_head: Option<Option<String>>,
}

impl ContactExtraTag {
    pub fn new(primary: String, secondary: String) -> ContactExtraTag {
        ContactExtraTag {
            primary,
            secondary,
            issue_status: None,
            issue_status_color: None,
            issue_status_id: None,
            issue_number: None,
            issue_title: None,
            project_key: None,
            project_name: None,
            project_id: None,
            assignee: None,
            contact_threads: None,
            basic_contact_threads: None,
            review_state: None,
            merge_request_branch_merged: None,
            is_merge_request: None,
            review_number: None,
            review_participant_role: None,
            reviewer_state: None,
            review_their_turn: None,
            target_merge_request_branch_head: None,
        }
    }
}


