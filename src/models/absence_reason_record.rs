/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct AbsenceReasonRecord {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "archived")]
    pub archived: bool,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "description")]
    pub description: String,
    #[serde(rename = "defaultAvailability")]
    pub default_availability: bool,
    #[serde(rename = "approvalRequired")]
    pub approval_required: bool,
    #[serde(rename = "icon")]
    pub icon: String,
    #[serde(rename = "etag", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub etag: Option<Option<i64>>,
    #[serde(rename = "category", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub category: Option<Option<String>>,
}

impl AbsenceReasonRecord {
    pub fn new(id: String, archived: bool, name: String, description: String, default_availability: bool, approval_required: bool, icon: String) -> AbsenceReasonRecord {
        AbsenceReasonRecord {
            id,
            archived,
            name,
            description,
            default_availability,
            approval_required,
            icon,
            etag: None,
            category: None,
        }
    }
}


