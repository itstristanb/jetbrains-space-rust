/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ImportArticle {
    #[serde(rename = "title")]
    pub title: String,
    #[serde(rename = "content")]
    pub content: String,
    #[serde(rename = "authorId")]
    pub author_id: String,
    #[serde(rename = "created")]
    pub created: String,
    #[serde(rename = "teams", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub teams: Option<Option<Vec<String>>>,
    #[serde(rename = "locations", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub locations: Option<Option<Vec<String>>>,
    #[serde(rename = "externalId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub external_id: Option<Option<String>>,
    #[serde(rename = "externalUrl", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub external_url: Option<Option<String>>,
}

impl ImportArticle {
    pub fn new(title: String, content: String, author_id: String, created: String) -> ImportArticle {
        ImportArticle {
            title,
            content,
            author_id,
            created,
            teams: None,
            locations: None,
            external_id: None,
            external_url: None,
        }
    }
}


