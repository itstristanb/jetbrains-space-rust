/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CodeReviewParticipantRecord {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "projectId")]
    pub project_id: String,
    #[serde(rename = "role")]
    pub role: crate::models::CodeReviewParticipantRole,
    #[serde(rename = "profile")]
    pub profile: Box<crate::models::TdMemberProfile>,
    #[serde(rename = "reviewerState", skip_serializing_if = "Option::is_none")]
    pub reviewer_state: Option<crate::models::ReviewerState>,
    #[serde(rename = "theirTurn", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub their_turn: Option<Option<bool>>,
    #[serde(rename = "archived")]
    pub archived: bool,
}

impl CodeReviewParticipantRecord {
    pub fn new(id: String, project_id: String, role: crate::models::CodeReviewParticipantRole, profile: crate::models::TdMemberProfile, archived: bool) -> CodeReviewParticipantRecord {
        CodeReviewParticipantRecord {
            id,
            project_id,
            role,
            profile: Box::new(profile),
            reviewer_state: None,
            their_turn: None,
            archived,
        }
    }
}


