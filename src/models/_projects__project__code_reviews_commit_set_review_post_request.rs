/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProjectsProjectCodeReviewsCommitSetReviewPostRequest {
    #[serde(rename = "repository")]
    pub repository: String,
    #[serde(rename = "revisions")]
    pub revisions: Vec<String>,
    #[serde(rename = "title", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub title: Option<Option<String>>,
    #[serde(rename = "authorProfileIds", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub author_profile_ids: Option<Option<Vec<String>>>,
    #[serde(rename = "files", skip_serializing_if = "Option::is_none")]
    pub files: Option<Box<crate::models::FileSetInReview>>,
}

impl ProjectsProjectCodeReviewsCommitSetReviewPostRequest {
    pub fn new(repository: String, revisions: Vec<String>) -> ProjectsProjectCodeReviewsCommitSetReviewPostRequest {
        ProjectsProjectCodeReviewsCommitSetReviewPostRequest {
            repository,
            revisions,
            title: None,
            author_profile_ids: None,
            files: None,
        }
    }
}


