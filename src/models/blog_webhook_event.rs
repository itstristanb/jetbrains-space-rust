/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct BlogWebhookEvent {
    #[serde(rename = "meta")]
    pub meta: Box<crate::models::KMetaMod>,
    #[serde(rename = "article")]
    pub article: Box<crate::models::ArticleRecord>,
    #[serde(rename = "action", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub action: Option<Option<String>>,
    #[serde(rename = "author", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub author: Option<Option<Box<crate::models::ApplicationWebhookEventOwner>>>,
    #[serde(rename = "created", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub created: Option<Option<Box<crate::models::AutomationJobEventStartTime>>>,
    #[serde(rename = "title", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub title: Option<Option<Box<crate::models::AbsenceWebhookEventIcon>>>,
    #[serde(rename = "textChanged")]
    pub text_changed: bool,
    #[serde(rename = "unpublished", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub unpublished: Option<Option<Box<crate::models::AbsenceWebhookEventAvailable>>>,
    #[serde(rename = "teams", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub teams: Option<Option<Box<crate::models::BlogWebhookEventTeams>>>,
    #[serde(rename = "locations", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub locations: Option<Option<Box<crate::models::BlogWebhookEventLocations>>>,
    #[serde(rename = "externalEntityInfo", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub external_entity_info: Option<Option<Box<crate::models::BlogWebhookEventExternalEntityInfo>>>,
}

impl BlogWebhookEvent {
    pub fn new(meta: crate::models::KMetaMod, article: crate::models::ArticleRecord, text_changed: bool) -> BlogWebhookEvent {
        BlogWebhookEvent {
            meta: Box::new(meta),
            article: Box::new(article),
            action: None,
            author: None,
            created: None,
            title: None,
            text_changed,
            unpublished: None,
            teams: None,
            locations: None,
            external_entity_info: None,
        }
    }
}


