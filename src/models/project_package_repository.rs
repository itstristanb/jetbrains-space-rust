/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProjectPackageRepository {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "project")]
    pub project: Box<crate::models::PrProject>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "description", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub description: Option<Option<String>>,
    #[serde(rename = "repository")]
    pub repository: Box<crate::models::PackageRepository>,
    #[serde(rename = "permissions", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub permissions: Option<Option<Vec<String>>>,
    #[serde(rename = "archived")]
    pub archived: bool,
    #[serde(rename = "connections")]
    pub connections: Vec<crate::models::PackageRepositoryConnection>,
}

impl ProjectPackageRepository {
    pub fn new(id: String, project: crate::models::PrProject, name: String, repository: crate::models::PackageRepository, archived: bool, connections: Vec<crate::models::PackageRepositoryConnection>) -> ProjectPackageRepository {
        ProjectPackageRepository {
            id,
            project: Box::new(project),
            name,
            description: None,
            repository: Box::new(repository),
            permissions: None,
            archived,
            connections,
        }
    }
}


