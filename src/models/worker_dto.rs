/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct WorkerDto {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "owner", skip_serializing_if = "Option::is_none")]
    pub owner: Option<Box<crate::models::TdMemberProfile>>,
    #[serde(rename = "ownerPrincipal", skip_serializing_if = "Option::is_none")]
    pub owner_principal: Option<Box<crate::models::CPrincipal>>,
    #[serde(rename = "info")]
    pub info: Box<crate::models::WorkerInfoDto>,
    #[serde(rename = "computePool")]
    pub compute_pool: Box<crate::models::WorkerComputePoolDto>,
    #[serde(rename = "version")]
    pub version: Box<crate::models::WorkerVersionDto>,
    #[serde(rename = "lastAccessTime", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub last_access_time: Option<Option<String>>,
    #[serde(rename = "status")]
    pub status: crate::models::WorkerStatus,
    #[serde(rename = "scope")]
    pub scope: crate::models::WorkerScope,
    #[serde(rename = "suspended")]
    pub suspended: bool,
    #[serde(rename = "projects", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub projects: Option<Option<Vec<crate::models::PrProject>>>,
    #[serde(rename = "tags")]
    pub tags: Vec<crate::models::WorkerTagDto>,
    #[serde(rename = "stepsStats")]
    pub steps_stats: Box<crate::models::WorkerStepsStatsDto>,
    #[serde(rename = "workerStats")]
    pub worker_stats: Box<crate::models::WorkerStatsDto>,
    #[serde(rename = "workerCapabilities")]
    pub worker_capabilities: Vec<crate::models::WorkerCapability>,
    #[serde(rename = "permanentTokenInfo", skip_serializing_if = "Option::is_none")]
    pub permanent_token_info: Option<Box<crate::models::WorkerPermanentTokenInfoDto>>,
}

impl WorkerDto {
    pub fn new(id: String, name: String, info: crate::models::WorkerInfoDto, compute_pool: crate::models::WorkerComputePoolDto, version: crate::models::WorkerVersionDto, status: crate::models::WorkerStatus, scope: crate::models::WorkerScope, suspended: bool, tags: Vec<crate::models::WorkerTagDto>, steps_stats: crate::models::WorkerStepsStatsDto, worker_stats: crate::models::WorkerStatsDto, worker_capabilities: Vec<crate::models::WorkerCapability>) -> WorkerDto {
        WorkerDto {
            id,
            name,
            owner: None,
            owner_principal: None,
            info: Box::new(info),
            compute_pool: Box::new(compute_pool),
            version: Box::new(version),
            last_access_time: None,
            status,
            scope,
            suspended,
            projects: None,
            tags,
            steps_stats: Box::new(steps_stats),
            worker_stats: Box::new(worker_stats),
            worker_capabilities,
            permanent_token_info: None,
        }
    }
}


