/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ChannelEvent {
    #[serde(rename = "meta")]
    pub meta: Box<crate::models::KMetaMod>,
    #[serde(rename = "channel")]
    pub channel: Box<crate::models::M2ChannelRecord>,
    #[serde(rename = "name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub name: Option<Option<Box<crate::models::AbsenceWebhookEventIcon>>>,
    #[serde(rename = "description", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub description: Option<Option<Box<crate::models::AbsenceWebhookEventIcon>>>,
    #[serde(rename = "icon", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub icon: Option<Option<Box<crate::models::AbsenceWebhookEventIcon>>>,
    #[serde(rename = "restored", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub restored: Option<Option<bool>>,
    #[serde(rename = "archived", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub archived: Option<Option<bool>>,
}

impl ChannelEvent {
    pub fn new(meta: crate::models::KMetaMod, channel: crate::models::M2ChannelRecord) -> ChannelEvent {
        ChannelEvent {
            meta: Box::new(meta),
            channel: Box::new(channel),
            name: None,
            description: None,
            icon: None,
            restored: None,
            archived: None,
        }
    }
}


