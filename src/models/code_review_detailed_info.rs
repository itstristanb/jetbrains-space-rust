/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CodeReviewDetailedInfo {
    #[serde(rename = "shortInfo")]
    pub short_info: Box<crate::models::CodeReviewRecord>,
    #[serde(rename = "commits")]
    pub commits: Vec<crate::models::RevisionsInReview>,
    #[serde(rename = "discussionCounter")]
    pub discussion_counter: Box<crate::models::CodeReviewDiscussionCounter>,
    #[serde(rename = "unboundDiscussionCounter", skip_serializing_if = "Option::is_none")]
    pub unbound_discussion_counter: Option<Box<crate::models::CodeReviewUnboundDiscussionCounter>>,
    #[serde(rename = "branches")]
    pub branches: Vec<crate::models::TrackedBranchesInReview>,
}

impl CodeReviewDetailedInfo {
    pub fn new(short_info: crate::models::CodeReviewRecord, commits: Vec<crate::models::RevisionsInReview>, discussion_counter: crate::models::CodeReviewDiscussionCounter, branches: Vec<crate::models::TrackedBranchesInReview>) -> CodeReviewDetailedInfo {
        CodeReviewDetailedInfo {
            short_info: Box::new(short_info),
            commits,
            discussion_counter: Box::new(discussion_counter),
            unbound_discussion_counter: None,
            branches,
        }
    }
}


