/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct EventSubjectInfoDto {
    #[serde(rename = "code")]
    pub code: String,
    #[serde(rename = "parentCode", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub parent_code: Option<Option<String>>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "description")]
    pub description: String,
    #[serde(rename = "events")]
    pub events: Vec<crate::models::EventTypeInfoDto>,
    #[serde(rename = "defaultFilters")]
    pub default_filters: Vec<crate::models::SubscriptionFilter>,
    #[serde(rename = "featureFlag", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub feature_flag: Option<Option<String>>,
}

impl EventSubjectInfoDto {
    pub fn new(code: String, name: String, description: String, events: Vec<crate::models::EventTypeInfoDto>, default_filters: Vec<crate::models::SubscriptionFilter>) -> EventSubjectInfoDto {
        EventSubjectInfoDto {
            code,
            parent_code: None,
            name,
            description,
            events,
            default_filters,
            feature_flag: None,
        }
    }
}


