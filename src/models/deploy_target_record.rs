/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct DeployTargetRecord {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "projectId")]
    pub project_id: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "key")]
    pub key: String,
    #[serde(rename = "description")]
    pub description: String,
    #[serde(rename = "createdAt")]
    pub created_at: String,
    #[serde(rename = "lastUpdated", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub last_updated: Option<Option<String>>,
    #[serde(rename = "lastDeployed", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub last_deployed: Option<Option<String>>,
    #[serde(rename = "channel")]
    pub channel: Box<crate::models::M2ChannelRecord>,
    #[serde(rename = "number", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub number: Option<Option<i32>>,
    #[serde(rename = "fullNumberId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub full_number_id: Option<Option<String>>,
    #[serde(rename = "archived")]
    pub archived: bool,
    #[serde(rename = "links")]
    pub links: Vec<crate::models::DeployTargetLink>,
    #[serde(rename = "current", skip_serializing_if = "Option::is_none")]
    pub current: Option<Box<crate::models::DeploymentInfo>>,
    #[serde(rename = "next", skip_serializing_if = "Option::is_none")]
    pub next: Option<Box<crate::models::DeploymentInfo>>,
    #[serde(rename = "createdBy", skip_serializing_if = "Option::is_none")]
    pub created_by: Option<Box<crate::models::CPrincipal>>,
    #[serde(rename = "channelId")]
    pub channel_id: String,
    #[serde(rename = "repositories")]
    pub repositories: Vec<crate::models::DeployTargetRepositoryDto>,
    #[serde(rename = "manualControl")]
    pub manual_control: bool,
    #[serde(rename = "singleScheduled", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub single_scheduled: Option<Option<bool>>,
    #[serde(rename = "hangTimeoutMinutes", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub hang_timeout_minutes: Option<Option<i32>>,
    #[serde(rename = "failTimeoutMinutes", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub fail_timeout_minutes: Option<Option<i32>>,
    #[serde(rename = "connectedChannelId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub connected_channel_id: Option<Option<String>>,
    #[serde(rename = "users")]
    pub users: Vec<crate::models::TdMemberProfile>,
    #[serde(rename = "teams")]
    pub teams: Vec<crate::models::TdTeam>,
    #[serde(rename = "customFields")]
    pub custom_fields: ::std::collections::HashMap<String, crate::models::CfValue>,
}

impl DeployTargetRecord {
    pub fn new(id: String, project_id: String, name: String, key: String, description: String, created_at: String, channel: crate::models::M2ChannelRecord, archived: bool, links: Vec<crate::models::DeployTargetLink>, channel_id: String, repositories: Vec<crate::models::DeployTargetRepositoryDto>, manual_control: bool, users: Vec<crate::models::TdMemberProfile>, teams: Vec<crate::models::TdTeam>, custom_fields: ::std::collections::HashMap<String, crate::models::CfValue>) -> DeployTargetRecord {
        DeployTargetRecord {
            id,
            project_id,
            name,
            key,
            description,
            created_at,
            last_updated: None,
            last_deployed: None,
            channel: Box::new(channel),
            number: None,
            full_number_id: None,
            archived,
            links,
            current: None,
            next: None,
            created_by: None,
            channel_id,
            repositories,
            manual_control,
            single_scheduled: None,
            hang_timeout_minutes: None,
            fail_timeout_minutes: None,
            connected_channel_id: None,
            users,
            teams,
            custom_fields,
        }
    }
}


