/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct IssueImportResult {
    #[serde(rename = "message")]
    pub message: String,
    #[serde(rename = "created", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub created: Option<Option<Vec<crate::models::IssueImportResultItem>>>,
    #[serde(rename = "updated", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub updated: Option<Option<Vec<crate::models::IssueImportResultItem>>>,
    #[serde(rename = "skipped", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub skipped: Option<Option<Vec<crate::models::IssueImportResultItem>>>,
    #[serde(rename = "missingAttributes", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub missing_attributes: Option<Option<Vec<String>>>,
}

impl IssueImportResult {
    pub fn new(message: String) -> IssueImportResult {
        IssueImportResult {
            message,
            created: None,
            updated: None,
            skipped: None,
            missing_attributes: None,
        }
    }
}


