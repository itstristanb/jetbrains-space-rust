/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct UnfurlDetailsCommit {
    #[serde(rename = "project")]
    pub project: Box<crate::models::PrProject>,
    #[serde(rename = "repository")]
    pub repository: String,
    #[serde(rename = "repositoryId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub repository_id: Option<Option<String>>,
    #[serde(rename = "commitId")]
    pub commit_id: String,
    #[serde(rename = "message")]
    pub message: String,
    #[serde(rename = "messageUnfurls", skip_serializing_if = "Option::is_none")]
    pub message_unfurls: Option<Box<crate::models::CommitMessageUnfurlsRecord>>,
    #[serde(rename = "commitDate")]
    pub commit_date: String,
    #[serde(rename = "authorDate", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub author_date: Option<Option<String>>,
    #[serde(rename = "author")]
    pub author: Box<crate::models::GitAuthorInfo>,
    #[serde(rename = "authorProfile", skip_serializing_if = "Option::is_none")]
    pub author_profile: Option<Box<crate::models::TdMemberProfile>>,
    #[serde(rename = "hideAuthorAndDate", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub hide_author_and_date: Option<Option<bool>>,
    #[serde(rename = "withBranchTags", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub with_branch_tags: Option<Option<bool>>,
    #[serde(rename = "reviewId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub review_id: Option<Option<String>>,
}

impl UnfurlDetailsCommit {
    pub fn new(project: crate::models::PrProject, repository: String, commit_id: String, message: String, commit_date: String, author: crate::models::GitAuthorInfo) -> UnfurlDetailsCommit {
        UnfurlDetailsCommit {
            project: Box::new(project),
            repository,
            repository_id: None,
            commit_id,
            message,
            message_unfurls: None,
            commit_date,
            author_date: None,
            author: Box::new(author),
            author_profile: None,
            hide_author_and_date: None,
            with_branch_tags: None,
            review_id: None,
        }
    }
}


