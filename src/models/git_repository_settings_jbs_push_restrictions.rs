/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct GitRepositorySettingsJbsPushRestrictions {
    #[serde(rename = "checkAuthenticatedCommitter", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub check_authenticated_committer: Option<Option<bool>>,
    #[serde(rename = "requireSignature", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub require_signature: Option<Option<bool>>,
    #[serde(rename = "verifySignature", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub verify_signature: Option<Option<bool>>,
    #[serde(rename = "maxFileSize", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub max_file_size: Option<Option<String>>,
    #[serde(rename = "defaultForbiddenFilesList", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub default_forbidden_files_list: Option<Option<bool>>,
    #[serde(rename = "forbiddenFileNames", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub forbidden_file_names: Option<Option<Vec<String>>>,
    #[serde(rename = "commitMessageRegex", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub commit_message_regex: Option<Option<String>>,
    #[serde(rename = "commitMessageNegativeRegex", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub commit_message_negative_regex: Option<Option<String>>,
    #[serde(rename = "windowsCompatibility", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub windows_compatibility: Option<Option<bool>>,
}

impl GitRepositorySettingsJbsPushRestrictions {
    pub fn new() -> GitRepositorySettingsJbsPushRestrictions {
        GitRepositorySettingsJbsPushRestrictions {
            check_authenticated_committer: None,
            require_signature: None,
            verify_signature: None,
            max_file_size: None,
            default_forbidden_files_list: None,
            forbidden_file_names: None,
            commit_message_regex: None,
            commit_message_negative_regex: None,
            windows_compatibility: None,
        }
    }
}


