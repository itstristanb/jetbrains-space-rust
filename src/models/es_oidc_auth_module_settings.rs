/*
 * Space
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.3.0-DEV.171131
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct EsOidcAuthModuleSettings {
    #[serde(rename = "clientId")]
    pub client_id: String,
    #[serde(rename = "clientSecret")]
    pub client_secret: String,
    #[serde(rename = "registerNewUsers")]
    pub register_new_users: bool,
    #[serde(rename = "discoveryUrl", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub discovery_url: Option<Option<String>>,
    #[serde(rename = "issuer")]
    pub issuer: String,
    #[serde(rename = "authorizationEndpoint")]
    pub authorization_endpoint: String,
    #[serde(rename = "tokenEndpoint")]
    pub token_endpoint: String,
    #[serde(rename = "tokenKeysEndpoint")]
    pub token_keys_endpoint: String,
    #[serde(rename = "userInfoEndpoint")]
    pub user_info_endpoint: String,
    #[serde(rename = "domains")]
    pub domains: Vec<String>,
    #[serde(rename = "registerNewUserRules", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub register_new_user_rules: Option<Option<Vec<crate::models::OidcRegisterNewUserRule>>>,
}

impl EsOidcAuthModuleSettings {
    pub fn new(client_id: String, client_secret: String, register_new_users: bool, issuer: String, authorization_endpoint: String, token_endpoint: String, token_keys_endpoint: String, user_info_endpoint: String, domains: Vec<String>) -> EsOidcAuthModuleSettings {
        EsOidcAuthModuleSettings {
            client_id,
            client_secret,
            register_new_users,
            discovery_url: None,
            issuer,
            authorization_endpoint,
            token_endpoint,
            token_keys_endpoint,
            user_info_endpoint,
            domains,
            register_new_user_rules: None,
        }
    }
}


